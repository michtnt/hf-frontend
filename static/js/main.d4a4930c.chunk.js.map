{"version":3,"sources":["services/config.js","services/request.js","services/api/recipe.js","services/api/review.js","views/Recipe/index.js","services/api/auth.js","views/Login/index.js","App.js","views/Register/index.js","views/Recipe/component/recipeForm.js","index.js"],"names":["SERVER_URL","process","REACT_APP_BASE_URL","emailRegex","api","method","url","a","data","authentication","callback","headers","authorization","localStorage","getItem","axios","response","window","alert","message","getRecipes","getRecipe","params","createRecipe","updateRecipe","deleteRecipe","createReview","useStyles","makeStyles","root","marginBottom","title","fontSize","pos","Recipe","props","useState","recipes","setRecipes","paginatedRecipes","setPaginatedRecipes","page","setPage","setMessage","reviewForm","setReviewForm","rating","setRating","classes","useEffect","fetchRecipes","slice","delRecipe","id","_recipes","filter","recipe","_id","addReview","Button","variant","color","onClick","history","push","Typography","Pagination","count","length","Math","floor","onChange","event","val","paginateRecipes","map","Card","className","CardContent","name","description","prep_time_minutes","cook_time_minutes","Input","type","value","required","e","target","Rating","newValue","reviews","review","readOnly","user","email","signup","login","Login","setEmail","password","setPassword","handleSubmit","preventDefault","test","setItem","token","location","href","routes","exact","path","component","needAuth","newPassword","setNewPassword","setName","setDescription","preptime","setPrepTime","cooktime","setCookTime","match","fetchRecipe","addRecipe","newRecipe","updRecipe","updateObj","App","isLoggedIn","route","i","Component","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d4a4930c.chunk.js","sourcesContent":["export const SERVER_URL =\n  process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\nexport const emailRegex =\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","import axios from \"axios\";\nimport { SERVER_URL } from \"./config\";\n\n// TODO need improvement\nexport const api = async (method, url, data = {}, authentication, callback) => {\n  let headers = { \"Content-Type\": \"application/json\" };\n\n  if (authentication) {\n    headers.authorization = `Bearer ${localStorage.getItem(\n      \"hf-frontend@token\"\n    )}`;\n  }\n\n  try {\n    let response = await axios({\n      method,\n      url: `${SERVER_URL}${url}`,\n      data,\n      headers,\n    });\n\n    // return response.data;\n    if (response) {\n      callback(response.data);\n    }\n  } catch (e) {\n    window.alert(e.response?.data?.message || \"Something wrong\");\n    return false;\n  }\n};\n","import { api } from \"../request\";\n\nexport const getRecipes = async (data, callback) => {\n  await api(\"GET\", \"/v1/recipe\", data, true, callback);\n};\n\nexport const getRecipe = async (data, params, callback) => {\n  await api(\"GET\", `/v1/recipe/${params}`, data, true, callback);\n};\n\nexport const createRecipe = async (data, callback) => {\n  await api(\"POST\", \"/v1/recipe\", data, true, callback);\n};\n\nexport const updateRecipe = async (data, params, callback) => {\n  await api(\"PUT\", `/v1/recipe/${params}`, data, true, callback);\n};\n\nexport const deleteRecipe = async (data, params, callback) => {\n  await api(\"DELETE\", `/v1/recipe/${params}`, data, true, callback);\n};\n","import { api } from \"../request\";\n\nexport const createReview = async (data, params, callback) => {\n  await api(\"POST\", `/v1/review/${params}`, data, true, callback);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  makeStyles,\n  Input,\n} from \"@material-ui/core\";\nimport { Pagination, Rating } from \"@material-ui/lab\";\n\nimport { deleteRecipe, getRecipes } from \"../../services/api/recipe\";\nimport { createReview } from \"../../services/api/review\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: 30,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst Recipe = (props) => {\n  const [recipes, setRecipes] = useState([]);\n  const [paginatedRecipes, setPaginatedRecipes] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const [message, setMessage] = useState(\"\");\n  const [reviewForm, setReviewForm] = useState(false);\n  const [rating, setRating] = useState(5);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchRecipes();\n  }, [reviewForm, recipes]);\n\n  const fetchRecipes = async () => {\n    await getRecipes({}, (response) => {\n      setRecipes(response.recipes);\n      setPaginatedRecipes(response.recipes.slice(page * 10, (page + 1) * 10));\n    });\n  };\n\n  const delRecipe = async (id) => {\n    await deleteRecipe({}, id, (response) => {\n      let _recipes = recipes.filter((recipe) => recipe._id != id);\n      setRecipes(_recipes);\n    });\n  };\n\n  const paginateRecipes = (val) => {\n    setPage(val);\n    let _recipes = recipes.slice((val - 1) * 10, val * 10);\n    setPaginatedRecipes(_recipes);\n  };\n\n  const addReview = async (id) => {\n    await createReview({ message, rating }, id, (response) => {\n      setReviewForm(false);\n      setMessage(\"\");\n    });\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.history.push(`/recipe/create/new`)}\n      >\n        Create Recipe\n      </Button>\n      <Typography>Recipes List</Typography>\n      {paginatedRecipes && (\n        <Pagination\n          count={\n            recipes.length % 10 === 0\n              ? recipes.length / 10\n              : Math.floor(recipes.length / 10) + 1\n          }\n          page={page}\n          onChange={(event, val) => paginateRecipes(val)}\n        />\n      )}\n\n      {paginatedRecipes &&\n        paginatedRecipes.map((recipe) => (\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography>\n                <b>Name </b>\n                {recipe.name}\n              </Typography>\n              <Typography>\n                <b>Description </b>\n                {recipe.description}\n              </Typography>\n              <Typography>\n                <b>Prep Time </b>\n                {recipe.prep_time_minutes || \"unknown\"}\n              </Typography>\n              <Typography>\n                <b>Cook Time </b>\n                {recipe.cook_time_minutes || \"unknown\"}\n              </Typography>\n              {reviewForm == recipe._id && (\n                <div>\n                  <Input\n                    type=\"text\"\n                    name=\"message\"\n                    value={message}\n                    required\n                    onChange={(e) => setMessage(e.target.value)}\n                  />\n                  <Rating\n                    name=\"simple-controlled\"\n                    value={rating}\n                    onChange={(event, newValue) => {\n                      setRating(newValue);\n                    }}\n                  />\n                  <br />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => addReview(recipe._id)}\n                  >\n                    <Typography>Save Review</Typography>\n                  </Button>\n                  <br />\n                </div>\n              )}\n              <Button\n                variant=\"contained\"\n                onClick={() => props.history.push(`/recipe/edit/${recipe._id}`)}\n              >\n                <Typography>Update</Typography>\n              </Button>\n              <Button variant=\"contained\" onClick={() => delRecipe(recipe._id)}>\n                <Typography>Delete</Typography>\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={() => setReviewForm(recipe._id)}\n              >\n                <Typography>Review</Typography>\n              </Button>\n              <Typography>\n                <b>Reviews</b>\n              </Typography>\n              {recipe.reviews?.map((review) => (\n                <div>\n                  <Typography>{review.message}</Typography>\n                  <Rating name=\"read-only\" value={review.rating} readOnly />\n                  <Typography>{review.user.email}</Typography>\n                </div>\n              ))}\n            </CardContent>\n          </Card>\n        ))}\n    </div>\n  );\n};\n\nexport default Recipe;\n","import { api } from \"../request\";\n\nexport const signup = async (data, callback) => {\n  await api(\"POST\", \"/auth/signup\", data, false, callback);\n};\n\nexport const login = async (data, callback) => {\n  await api(\"POST\", \"/auth/login\", data, false, callback);\n};\n","import React, { useState } from \"react\";\nimport { Input, Typography, Button } from \"@material-ui/core\";\n\nimport { login } from \"../../services/api/auth\";\nimport { emailRegex } from \"../../services/config\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!emailRegex.test(email)) {\n      window.alert(\"Invalid email!\");\n      return;\n    }\n\n    login({ email, password }, (response) => {\n      localStorage.setItem(\"hf-frontend@token\", response.token);\n      window.location.href = \"/recipe\";\n      // props.history.push(\"/recipe\"); why?\n    });\n  };\n\n  return (\n    <div>\n      <Typography>Email</Typography>\n      <Input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        required\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Typography>Password</Typography>\n      <Input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        required\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Submit\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.history.push(\"/register\")}\n      >\n        Register\n      </Button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Recipe from \"./views/Recipe\";\nimport Login from \"./views/Login\";\nimport Register from \"./views/Register\";\nimport RecipeForm from \"./views/Recipe/component/recipeForm\";\n\nfunction App() {\n  const isLoggedIn = localStorage.getItem(\"hf-frontend@token\");\n\n  return (\n    <Router>\n      <Switch>\n        {/* render login first, but could be better way */}\n        <Route exact path={\"/login\"} component={Login} />\n        {routes.map((route, i) => {\n          const Component = route.component;\n          return (\n            <Route\n              key={`router${i}`}\n              path={route.path}\n              exact={route.exact}\n              render={(props) =>\n                isLoggedIn || !route.needAuth ? (\n                  <Component {...props} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n          );\n        })}\n      </Switch>\n    </Router>\n  );\n}\n\nconst routes = [\n  {\n    exact: true,\n    path: \"/\",\n    component: Recipe,\n    needAuth: true,\n  },\n  {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    needAuth: false,\n  },\n\n  {\n    exact: true,\n    path: \"/recipe\",\n    component: Recipe,\n    needAuth: true,\n  },\n  {\n    exact: true,\n    path: \"/recipe/:type/:id\",\n    component: RecipeForm,\n    needAuth: true,\n  },\n];\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { Input, Typography, Button } from \"@material-ui/core\";\n\nimport { emailRegex } from \"../../services/config\";\nimport { signup } from \"../../services/api/auth\";\n\nconst Register = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!emailRegex.test(email)) {\n      window.alert(\"Invalid email!\");\n      return;\n    }\n    if (password.length < 8) {\n      window.alert(\"Password must be more than 8 characters!\");\n      return;\n    }\n    if (password != newPassword) {\n      window.alert(\"Password doesn't match!\");\n      return;\n    }\n\n    signup({ email, password }, (response) => {\n      localStorage.setItem(\"hf-frontend@token\", response.token);\n      window.location.href = \"/recipe\";\n      // props.history.push(\"/recipe\");\n    });\n  };\n\n  return (\n    <div>\n      <Typography>Email</Typography>\n      <Input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        required\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Typography>Password</Typography>\n      <Input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        required\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Typography>Confirm Password</Typography>\n      <Input\n        type=\"password\"\n        name=\"new_password\"\n        value={newPassword}\n        required\n        onChange={(e) => setNewPassword(e.target.value)}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Submit\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.history.push(\"/login\")}\n      >\n        Login\n      </Button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { Input, Typography, Button } from \"@material-ui/core\";\n\nimport {\n  getRecipe,\n  updateRecipe,\n  createRecipe,\n} from \"../../../services/api/recipe\";\n\nconst RecipeForm = (props) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [preptime, setPrepTime] = useState(\"\");\n  const [cooktime, setCookTime] = useState(\"\");\n\n  const { id, type } = props.match.params;\n\n  useEffect(() => {\n    if (id && type == \"edit\") {\n      // update\n      fetchRecipe(id);\n    }\n  }, []);\n\n  const fetchRecipe = async (id) => {\n    await getRecipe({}, id, (response) => {\n      setName(response.recipe.name);\n      setDescription(response.recipe.description);\n      setPrepTime(response.recipe.prep_time_minutes);\n      setCookTime(response.recipe.cook_time_minutes);\n    });\n  };\n\n  const addRecipe = async () => {\n    let newRecipe = {\n      name,\n      description,\n      prep_time_minutes: preptime,\n      cook_time_minutes: cooktime,\n    };\n    await createRecipe(newRecipe, () => {\n      props.history.push(\"/recipe\");\n    });\n  };\n\n  const updRecipe = async () => {\n    let updateObj = {\n      name,\n      description,\n      prep_time_minutes: preptime,\n      cook_time_minutes: cooktime,\n    };\n\n    await updateRecipe(updateObj, id, () => {\n      props.history.push(\"/recipe\");\n    });\n  };\n\n  return (\n    <div>\n      <Typography>Name</Typography>\n      <Input\n        type=\"text\"\n        value={name}\n        required\n        onChange={(e) => setName(e.target.value)}\n      />\n      <Typography>Description</Typography>\n      <Input\n        type=\"text\"\n        value={description}\n        required\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <Typography>Prep Time</Typography>\n      <Input\n        type=\"text\"\n        value={preptime}\n        onChange={(e) => setPrepTime(e.target.value)}\n      />\n      <Typography>Cook Time</Typography>\n\n      <Input\n        type=\"text\"\n        value={cooktime}\n        onChange={(e) => setCookTime(e.target.value)}\n      />\n      <br />\n      {type == \"edit\" ? (\n        <Button onClick={updRecipe} variant=\"contained\" color=\"secondary\">\n          <Typography>Update</Typography>\n        </Button>\n      ) : type == \"create\" ? (\n        <Button onClick={addRecipe} variant=\"contained\" color=\"secondary\">\n          <Typography>Create</Typography>\n        </Button>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeForm;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}