{"version":3,"sources":["services/config.js","services/request.js","services/api/recipe.js","views/Recipe/index.js","services/api/auth.js","views/Login/index.js","App.js","views/Register/index.js","views/Recipe/component/recipeForm.js","index.js"],"names":["SERVER_URL","process","emailRegex","api","method","url","a","data","authentication","callback","headers","authorization","localStorage","getItem","axios","response","window","alert","message","getRecipes","getRecipe","params","createRecipe","updateRecipe","deleteRecipe","useStyles","makeStyles","root","marginBottom","title","fontSize","pos","Recipe","props","useState","recipes","setRecipes","paginatedRecipes","setPaginatedRecipes","page","setPage","classes","useEffect","fetchRecipes","slice","delRecipe","id","_recipes","filter","recipe","_id","Button","variant","color","onClick","history","push","Typography","Pagination","count","length","onChange","event","val","paginateRecipes","map","Card","className","CardContent","name","description","prep_time_minutes","cook_time_minutes","signup","login","Login","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","test","setItem","token","Input","type","value","required","target","routes","exact","path","component","newPassword","setNewPassword","needAuth","setName","setDescription","preptime","setPrepTime","cooktime","setCookTime","match","fetchRecipe","addRecipe","newRecipe","updRecipe","updateObj","App","isLoggedIn","route","i","Component","render","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d37aaa83.chunk.js","sourcesContent":["export const SERVER_URL = process.env.SERVER_URL;\nexport const emailRegex =\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","import axios from \"axios\";\nimport { SERVER_URL } from \"./config\";\n\n// TODO need improvement\nexport const api = async (method, url, data = {}, authentication, callback) => {\n  let headers = { \"Content-Type\": \"application/json\" };\n\n  if (authentication) {\n    headers.authorization = `Bearer ${localStorage.getItem(\n      \"hf-frontend@token\"\n    )}`;\n  }\n\n  try {\n    let response = await axios({\n      method,\n      url: `${SERVER_URL}${url}`,\n      data,\n      headers,\n    });\n\n    // return response.data;\n    if (response) {\n      callback(response.data);\n    }\n  } catch (e) {\n    window.alert(e.response?.data?.message || \"Something wrong\");\n    return false;\n  }\n};\n","import { api } from \"../request\";\n\nexport const getRecipes = async (data, callback) => {\n  await api(\"GET\", \"/v1/recipe\", data, true, callback);\n};\n\nexport const getRecipe = async (data, params, callback) => {\n  await api(\"GET\", `/v1/recipe/${params}`, data, true, callback);\n};\n\nexport const createRecipe = async (data, callback) => {\n  await api(\"POST\", \"/v1/recipe\", data, true, callback);\n};\n\nexport const updateRecipe = async (data, params, callback) => {\n  await api(\"PUT\", `/v1/recipe/${params}`, data, true, callback);\n};\n\nexport const deleteRecipe = async (data, params, callback) => {\n  await api(\"DELETE\", `/v1/recipe/${params}`, data, true, callback);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nimport { deleteRecipe, getRecipes } from \"../../services/api/recipe\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: 30,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst Recipe = (props) => {\n  const [recipes, setRecipes] = useState([]);\n  const [paginatedRecipes, setPaginatedRecipes] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  const fetchRecipes = async () => {\n    await getRecipes({}, (response) => {\n      setRecipes(response.recipes);\n      setPaginatedRecipes(response.recipes.slice(page * 10, (page + 1) * 10));\n    });\n  };\n\n  const delRecipe = async (id) => {\n    await deleteRecipe({}, id, (response) => {\n      let _recipes = recipes.filter((recipe) => recipe._id != id);\n      setRecipes(_recipes);\n    });\n  };\n\n  const paginateRecipes = (val) => {\n    setPage(val);\n    let _recipes = recipes.slice((val - 1) * 10, val * 10);\n    setPaginatedRecipes(_recipes);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.history.push(`/recipe/create/new`)}\n      >\n        Create Recipe\n      </Button>\n      <Typography>Recipes List</Typography>\n      {paginatedRecipes && (\n        <Pagination\n          count={\n            recipes.length % 10 === 0\n              ? recipes.length / 10\n              : recipes.length / 10 + 1\n          }\n          page={page}\n          onChange={(event, val) => paginateRecipes(val)}\n        />\n      )}\n\n      {paginatedRecipes &&\n        paginatedRecipes.map((recipe) => (\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography>\n                <b>Name </b>\n                {recipe.name}\n              </Typography>\n              <Typography>\n                <b>Description </b>\n                {recipe.description}\n              </Typography>\n              <Typography>\n                <b>Prep Time </b>\n                {recipe.prep_time_minutes || \"unknown\"}\n              </Typography>\n              <Typography>\n                <b>Cook Time </b>\n                {recipe.cook_time_minutes || \"unknown\"}\n              </Typography>\n              <Button\n                variant=\"contained\"\n                onClick={() => props.history.push(`/recipe/edit/${recipe._id}`)}\n              >\n                <p>Update</p>\n              </Button>\n              <Button variant=\"contained\" onClick={() => delRecipe(recipe._id)}>\n                <p>Delete</p>\n              </Button>\n            </CardContent>\n          </Card>\n        ))}\n    </div>\n  );\n};\n\nexport default Recipe;\n","import { api } from \"../request\";\n\nexport const signup = async (data, callback) => {\n  await api(\"POST\", \"/auth/signup\", data, true, callback);\n};\n\nexport const login = async (data, callback) => {\n  await api(\"POST\", \"/auth/login\", data, true, callback);\n};\n","import React, { useState } from \"react\";\nimport { Input, Typography, Button } from \"@material-ui/core\";\n\nimport { login } from \"../../services/api/auth\";\nimport { emailRegex } from \"../../services/config\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!emailRegex.test(email)) {\n      window.alert(\"Invalid email!\");\n      return;\n    }\n\n    login({ email, password }, (response) => {\n      localStorage.setItem(\"hf-frontend@token\", response.token);\n      props.history.push(\"/recipe\");\n    });\n  };\n\n  return (\n    <div>\n      <Typography>Email</Typography>\n      <Input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        required\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Typography>Password</Typography>\n      <Input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        required\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Submit\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.history.push(\"/register\")}\n      >\n        Register\n      </Button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Recipe from \"./views/Recipe\";\nimport Login from \"./views/Login\";\nimport Register from \"./views/Register\";\nimport RecipeForm from \"./views/Recipe/component/recipeForm\";\n\nfunction App() {\n  const isLoggedIn = localStorage.getItem(\"hf-frontend@token\");\n\n  return (\n    <Router>\n      <Switch>\n        {/* render login first, but could be better way */}\n        <Route exact path={\"/hf-frontend/login\"} component={Login} />\n        {routes.map((route, i) => {\n          const Component = route.component;\n          return (\n            <Route\n              key={`router${i}`}\n              path={\"/hf-frontend/\" + route.path}\n              exact={route.exact}\n              render={(props) =>\n                isLoggedIn || !route.needAuth ? (\n                  <Component {...props} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n          );\n        })}\n      </Switch>\n    </Router>\n  );\n}\n\nconst routes = [\n  {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    needAuth: false,\n  },\n\n  {\n    exact: true,\n    path: \"/recipe\",\n    component: Recipe,\n    needAuth: true,\n  },\n  {\n    exact: true,\n    path: \"/recipe/:type/:id\",\n    component: RecipeForm,\n    needAuth: true,\n  },\n];\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { Input, Typography, Button } from \"@material-ui/core\";\n\nimport { emailRegex } from \"../../services/config\";\nimport { signup } from \"../../services/api/auth\";\n\nconst Register = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!emailRegex.test(email)) {\n      window.alert(\"Invalid email!\");\n      return;\n    }\n    if (password.length < 8) {\n      window.alert(\"Password must be more than 8 characters!\");\n      return;\n    }\n    if (password != newPassword) {\n      window.alert(\"Password doesn't match!\");\n      return;\n    }\n\n    signup({ email, password }, (response) => {\n      localStorage.setItem(\"hf-frontend@token\", response.token);\n      props.history.push(\"/recipe\");\n    });\n  };\n\n  return (\n    <div>\n      <Typography>Email</Typography>\n      <Input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        required\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <Typography>Password</Typography>\n      <Input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        required\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Typography>Confirm Password</Typography>\n      <Input\n        type=\"password\"\n        name=\"new_password\"\n        value={newPassword}\n        required\n        onChange={(e) => setNewPassword(e.target.value)}\n      />\n      <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Submit\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => props.history.push(\"/login\")}\n      >\n        Login\n      </Button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { Input, Typography, Button } from \"@material-ui/core\";\n\nimport {\n  getRecipe,\n  updateRecipe,\n  createRecipe,\n} from \"../../../services/api/recipe\";\n\nconst RecipeForm = (props) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [preptime, setPrepTime] = useState(\"\");\n  const [cooktime, setCookTime] = useState(\"\");\n\n  const { id, type } = props.match.params;\n\n  useEffect(() => {\n    if (id && type == \"edit\") {\n      // update\n      fetchRecipe(id);\n    }\n  }, []);\n\n  const fetchRecipe = async (id) => {\n    await getRecipe({}, id, (response) => {\n      setName(response.recipe.name);\n      setDescription(response.recipe.description);\n      setPrepTime(response.recipe.prep_time_minutes);\n      setCookTime(response.recipe.cook_time_minutes);\n    });\n  };\n\n  const addRecipe = async () => {\n    let newRecipe = {\n      name,\n      description,\n      prep_time_minutes: preptime,\n      cook_time_minutes: cooktime,\n    };\n    await createRecipe(newRecipe, () => {\n      props.history.push(\"/recipe\");\n    });\n  };\n\n  const updRecipe = async () => {\n    let updateObj = {\n      name,\n      description,\n      prep_time_minutes: preptime,\n      cook_time_minutes: cooktime,\n    };\n\n    await updateRecipe(updateObj, id, () => {\n      props.history.push(\"/recipe\");\n    });\n  };\n\n  return (\n    <div>\n      <Typography>Name</Typography>\n      <Input\n        type=\"text\"\n        value={name}\n        required\n        onChange={(e) => setName(e.target.value)}\n      />\n      <Typography>Description</Typography>\n      <Input\n        type=\"text\"\n        value={description}\n        required\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <Typography>Prep Time</Typography>\n      <Input\n        type=\"text\"\n        value={preptime}\n        onChange={(e) => setPrepTime(e.target.value)}\n      />\n      <Typography>Cook Time</Typography>\n\n      <Input\n        type=\"text\"\n        value={cooktime}\n        onChange={(e) => setCookTime(e.target.value)}\n      />\n      <br />\n      {type == \"edit\" ? (\n        <Button onClick={updRecipe} variant=\"contained\" color=\"secondary\">\n          <Typography>Update</Typography>\n        </Button>\n      ) : type == \"create\" ? (\n        <Button onClick={addRecipe} variant=\"contained\" color=\"secondary\">\n          <Typography>Create</Typography>\n        </Button>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeForm;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}